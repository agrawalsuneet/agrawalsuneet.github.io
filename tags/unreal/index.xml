<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unreal on Suneet Agrawal</title>
    <link>https://agrawalsuneet.github.io/tags/unreal/</link>
    <description>Recent content in Unreal on Suneet Agrawal</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://agrawalsuneet.github.io/tags/unreal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lambda in Unreal</title>
      <link>https://agrawalsuneet.github.io/blogs/lambda-in-unreal/</link>
      <pubDate>Fri, 15 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://agrawalsuneet.github.io/blogs/lambda-in-unreal/</guid>
      <description>&lt;p&gt;Lambda functions, or lambdas, are an essential tool in modern C++ programming and have powerful applications in Unreal Engine. They offer a concise way to define small, inline functions and are ideal for simplifying code, especially when working with delegates, multi-threaded tasks, or passing functions as parameters.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Delegates in Unreal</title>
      <link>https://agrawalsuneet.github.io/blogs/delegates-in-unreal/</link>
      <pubDate>Fri, 01 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://agrawalsuneet.github.io/blogs/delegates-in-unreal/</guid>
      <description>&lt;p&gt;Delegates in Unreal Engine play an essential role in creating modular, decoupled, and event-driven code. They allow one object to call a function on another object without hard-wiring the dependency between them, which is perfect for implementing event-driven behavior. In Unreal, delegates are especially useful in game development to handle events, respond to actions, or manage callbacks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>UPROPERTY in Unreal</title>
      <link>https://agrawalsuneet.github.io/blogs/uproperty-in-unreal/</link>
      <pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://agrawalsuneet.github.io/blogs/uproperty-in-unreal/</guid>
      <description>&lt;p&gt;Unreal Engine, renowned for its capabilities in creating visually stunning and highly interactive games and simulations, relies on several core features to achieve its potential. Among these, Unreal Property Specifiers, or UPROPERTY, stand out as a powerful tool for developers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>FString vs FName vs Text in Unreal</title>
      <link>https://agrawalsuneet.github.io/blogs/fstring-vs-fname-vs-text-in-unreal/</link>
      <pubDate>Wed, 06 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://agrawalsuneet.github.io/blogs/fstring-vs-fname-vs-text-in-unreal/</guid>
      <description>&lt;p&gt;Unreal Engine, developed by Epic Games, is a popular game engine that powers many successful video games and interactive experiences. When working with Unreal Engine, you often encounter various data types for handling text and strings, including FString, FName, and Text. In this blog post, we&amp;rsquo;ll dive into these three text-related data types, explore their differences, and provide examples of when to use each one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DrawDebugCylinder in Unreal</title>
      <link>https://agrawalsuneet.github.io/blogs/drawdebugcylinder-in-unreal/</link>
      <pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://agrawalsuneet.github.io/blogs/drawdebugcylinder-in-unreal/</guid>
      <description>&lt;p&gt;Unreal Engine is renowned for its powerful debugging and visualization tools that aid game developers in creating immersive and visually stunning experiences. One such tool that stands out is DrawDebugCylinder, a function that allows you to draw cylinder-shaped debug lines in your game world. In this blog post, we will dive into the details of DrawDebugCylinder in Unreal Engine using C++, including its function signature, parameter explanation, necessary headers, and real-world examples.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DrawDebugSphere in Unreal</title>
      <link>https://agrawalsuneet.github.io/blogs/drawdebugsphere-in-unreal/</link>
      <pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://agrawalsuneet.github.io/blogs/drawdebugsphere-in-unreal/</guid>
      <description>&lt;p&gt;Unreal Engine is a powerful and versatile game development framework that empowers developers to create stunning and immersive worlds. When it comes to debugging and visualizing game mechanics, Unreal Engine provides a variety of helpful tools, and one of them is DrawDebugSphere. In this blog post, we&amp;rsquo;ll delve into the details of DrawDebugSphere in Unreal Engine using C++, understand its function signature and parameters, explore the necessary headers to include, and provide real-world examples to showcase its usage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DrawDebugLine in Unreal</title>
      <link>https://agrawalsuneet.github.io/blogs/drawdebugline-in-unreal/</link>
      <pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://agrawalsuneet.github.io/blogs/drawdebugline-in-unreal/</guid>
      <description>&lt;p&gt;Debug visualization is a crucial aspect of game development, aiding programmers and artists in comprehending the behavior and interactions of various game elements. Unreal Engine offers a suite of debugging tools, and one such tool is the DrawDebugLine function. In this blog, we&amp;rsquo;ll delve into the usage of DrawDebugLine in Unreal Engine using C++, accompanied by illustrative examples.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
